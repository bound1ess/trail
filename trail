#!/usr/bin/env ruby
require 'pathname'
require 'open3'

class LintError

    def initialize(file, line)
        raise ArgumentError unless file.is_a?(String) and line.is_a?(Fixnum)

        @file, @line = file, line
    end

    def to_s
        "Found trailing whitespace(s) in #{@file}, line #{@line.to_s}."
    end
end

class LintErrorFinder
    attr_reader :messages

    def initialize(base_path)
        @messages, @base_path = Array.new, base_path
        @ignore = ['vendor', 'bower_components', 'node_modules']
    end

    def search_file(file)
        line_number = 0
        extra = $/.size

        File.read(file).each_line { |line|
            line_number += 1

            if not (line.rstrip.size + extra) == line.size
                add_message(file, line_number)
            end
        }
    end

    def search_dir(dir)
        Dir[dir + '/*'].each { |path|
            path = File.join(@base_path, path) unless Pathname.new(path).absolute?

            if Dir.exists?(path)
                search_dir(path) if not should_ignore?(path)
            else
                search_file(path) if not_binary?(path)
            end
        }
    end

    private
    def add_message(file, line)
        @messages.push LintError.new(file, line)
    end

    def not_binary?(file)
        type, status = Open3.capture2e('file', file)

        status.success? and type.include?('text')
    end

    def should_ignore?(path)
        @ignore.each do |dir|
            return true if path.include?(dir)
        end

        false
    end
end

# Grab input.
if ARGV.empty?
    path = Dir.getwd # Assume CWD.
else
    path = File.expand_path(ARGV.first)
end

finder = LintErrorFinder.new(path)

# Let the user know what's going on here.
puts "Scanning #{path}..."

# Get messages.
if Dir.exists?(path)
    finder.search_dir(path)
elsif File.exists?(path)
    finder.search_file(path)
else
    puts 'Invalid path argument was supplied.'
    exit
end

messages = finder.messages

# Display found errors.
if messages.empty?
    puts 'Great job!'
else
    for message in messages
        puts message
    end
end
